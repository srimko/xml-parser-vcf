<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <xsl:import href="../../../../../../../../MosGnr/xsl/export/GEN_vImprim.xsl" /><xsl:variable name="grilleX"><xsl:choose><xsl:when test="/exo/@grilleX"><xsl:value-of select="/exo/@grilleX"/></xsl:when><xsl:otherwise>3</xsl:otherwise></xsl:choose></xsl:variable> <xsl:variable name="typeQC"><xsl:choose><xsl:when test="/exo/@multiple='1'">QCM</xsl:when><xsl:otherwise>QCU</xsl:otherwise></xsl:choose></xsl:variable> <xsl:template name="exoQC"> <div class="STY_question"> <xsl:apply-templates select="exo/question" /> </div> <div class="STY_texteQC"> <xsl:apply-templates select="exo/reponses" /> </div> <xsl:if test="exo/interactions/*"> <div class="STY_zoneCommentaire"> <xsl:call-template name="COMMENTAIRES_EXO" /> </div> </xsl:if> </xsl:template> <xsl:template match="/"> <xsl:call-template name="ENTETE_PAGE" /> <xsl:call-template name="STYLE_contenu" /> <xsl:call-template name="exoQC" /> <xsl:call-template name="BAS_PAGE" /> </xsl:template> <xsl:template match="exo/reponses"> <xsl:choose> <xsl:when test="not(/exo/@disposition='grille')"> <table cellspacing="1" cellpadding="0" class="STY_listeQC"> <xsl:for-each select="reponse"> <xsl:apply-templates select="." mode="liste" /> </xsl:for-each> </table> </xsl:when> <xsl:otherwise> <xsl:variable name="nbColones"> <xsl:value-of select="$grilleX" /> </xsl:variable> <table cellpadding="0" cellspacing="12" align="center"> <xsl:choose> <xsl:when test="$nbColones='1'"> <xsl:for-each select="reponse"> <tr> <xsl:apply-templates select="." mode="tab" /> </tr> </xsl:for-each> </xsl:when> <xsl:otherwise> <xsl:for-each select="reponse"> <xsl:if test="(position() = 1) or ((position() mod $nbColones) = 1)"> <tr> <xsl:apply-templates select="." mode="tab" /> <xsl:apply-templates select="following-sibling::reponse[position() &lt; $nbColones]" mode="tab" /> </tr> </xsl:if> </xsl:for-each> </xsl:otherwise> </xsl:choose> </table> </xsl:otherwise> </xsl:choose> </xsl:template> <xsl:template match="reponses/reponse" mode="liste"> <xsl:variable name="num"> <xsl:number /> </xsl:variable> <xsl:call-template name="GEN_REP"> <xsl:with-param name="num" select="$num" /> </xsl:call-template> </xsl:template> <xsl:template match="reponses/reponse" mode="tab"> <xsl:variable name="num"> <xsl:number /> </xsl:variable> <td valign="top"> <xsl:attribute name="width"> <xsl:value-of select="100 div $grilleX" />%</xsl:attribute> <table width="100%"> <xsl:call-template name="GEN_REP"> <xsl:with-param name="num" select="$num" /> </xsl:call-template> </table> </td> </xsl:template> <xsl:template name="GEN_REP"> <xsl:param name="num" /> <tr> <xsl:if test="//exo/@boutonsDisp='droite'"> <td valign="top" class="STY_bordureQC"> <xsl:if test="(starts-with(@styleR,'nw')) and (/exo/@afficheCorrection='oui') and (//exo/@afficheBordure='true')"> <xsl:attribute name="class">STY_bordureQC STY_bordureQCDessus</xsl:attribute> </xsl:if> <div class="STY_reponseQC"> <xsl:if test="(starts-with(@styleR,'nw')) and (/exo/@afficheCorrection='oui')"> <xsl:attribute name="class">STY_reponseQC STY_reponseQCSel</xsl:attribute> </xsl:if> <xsl:apply-templates /> </div> </td> </xsl:if> <xsl:if test="not (/exo/@boutonsRep='non')"> <td align="right" width="20"> <xsl:attribute name="valign"> <xsl:value-of select="/exo/@boutonsRep" /> </xsl:attribute> <img class="STY_imgQC"> <xsl:attribute name="src">../../MosMtr/ressources/style/imprim/media/bouton<xsl:value-of select="$typeQC" /><xsl:if test="(starts-with(@styleR,'nw')) and (/exo/@afficheCorrection='oui')">_sel</xsl:if>.png</xsl:attribute> </img> </td> </xsl:if> <xsl:if test="not(/exo/@boutonsDisp='droite')"> <td valign="top" class="STY_bordureQC"> <xsl:if test="(starts-with(@styleR,'nw')) and (/exo/@afficheCorrection='oui') and (/exo/@afficheBordure='true')"> <xsl:attribute name="class">STY_bordureQC STY_bordureQCDessus</xsl:attribute> </xsl:if> <div class="STY_reponseQC"> <xsl:if test="(starts-with(@styleR,'nw')) and (/exo/@afficheCorrection='oui')"> <xsl:attribute name="class">STY_reponseQC STY_reponseQCSel</xsl:attribute> </xsl:if> <xsl:apply-templates /> </div> </td> </xsl:if> </tr> </xsl:template> <xsl:template match="consigne"><td class="STY_commentaire" valign="top"> <div class="STY_comtTitre"> <xsl:if test=".//img or .//clipAV"><xsl:attribute name="style">display:block;margin-bottom:3px</xsl:attribute></xsl:if> <xsl:choose><xsl:when test="@titre"> <xsl:value-of select="@titre"/> </xsl:when><xsl:otherwise><lex id="12"/></xsl:otherwise></xsl:choose><xsl:if test="not(@titre='') and not(p or div or img or clipAV or table)">.</xsl:if></div> <div class="STY_comtContenu"><xsl:apply-templates /></div></td></xsl:template><xsl:template match="exo//commentaire"><td class="STY_commentaire" valign="top"><xsl:if test="not(/*/@afficheCorrection='non')"> <div class="STY_comtTitre"> <xsl:if test=".//img or .//clipAV"><xsl:attribute name="style">display:block;margin-bottom:3px</xsl:attribute></xsl:if> <xsl:choose><xsl:when test="@num and @num!=''"><xsl:value-of select="@num" />.Â <xsl:value-of select="@titre" /></xsl:when><xsl:otherwise> <xsl:choose><xsl:when test="@titre"> <xsl:value-of select="@titre"/> </xsl:when><xsl:otherwise><lex id="131"/></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose><xsl:if test="not(@titre='') and not(p or div or img or clipAV or table)">.</xsl:if></div> <div class="STY_comtContenu"><xsl:apply-templates /></div> </xsl:if></td></xsl:template><xsl:template match="suggestion"><td class="STY_commentaire" valign="top"><xsl:if test="not(@ref='[solution]') or not(/*/@afficheCorrection='non')"> <div class="STY_comtTitre"> <xsl:if test=".//img or .//clipAV"><xsl:attribute name="style">display:block;margin-bottom:3px</xsl:attribute></xsl:if> <xsl:choose><xsl:when test="@titre"> <xsl:value-of select="@titre"/> </xsl:when><xsl:otherwise> <xsl:choose><xsl:when test="@ref='[solution]'"><lex id="311"/></xsl:when> <xsl:otherwise><lex id="196"/></xsl:otherwise></xsl:choose> </xsl:otherwise></xsl:choose><xsl:if test="not(@titre='') and not(p or div or img or clipAV or table)">.</xsl:if></div> <div class="STY_comtContenu"><xsl:apply-templates /></div> </xsl:if></td></xsl:template></xsl:stylesheet>
